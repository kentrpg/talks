name: CI

on:
  push:
    branches: ['**']
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  list-slidev-projects:
    runs-on: ubuntu-latest
    outputs:
      updated: ${{ steps.prepare.outputs.updated }}
    steps:
      - uses: actions/checkout@v4

      - name: List slidev projects
        id: prepare
        uses: ./.github/actions/list-slidev-projects

  changes:
    runs-on: ubuntu-latest
    needs: list-slidev-projects
    outputs:
      has_changed: ${{ steps.filter.outputs.modified_or_added }}
      changed_files: ${{ steps.filter.outputs.changed_files }}
      projects: ${{ steps.list.outputs.projects }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect changes in slidev projects
        id: filter
        uses: dorny/paths-filter@v3
        with:
          list-files: shell
          base: main
          filters: |
            src: &slidev-src
              - '**/src/**'
            modified_or_added:
              - added|modified: *slidev-src
            changed:
              - added|modified: '**'

      - name: Restore slidev project list from cache
        id: cache-projects-restore-changes
        uses: actions/cache/restore@v4
        with:
          path: .github/.cache/slidev-projects.list
          key: ${{ runner.os }}-slidev-projects-v1

      - name: Extract changed slidev projects
        id: list
        run: |
          changed="${{ steps.filter.outputs.modified_or_added_files }}"
          echo "Raw changed files: $changed"
          projects=$(echo "$changed" \
            | tr ' ' '\n' \
            | cut -d/ -f1 \
            | grep -Ff <(cat .github/.cache/slidev-projects.list) \
            | sort -u \
            | jq -Rc '[splits("\n") | select(. != "")]' \
            || echo "[]"
          )
          echo "ðŸ“¦ Extracted projects: $projects"
          echo "projects=${projects:-[]}" >> $GITHUB_OUTPUT

  lint:
    needs: changes
    if: ${{ needs.changes.outputs.has_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Setup Node with pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Lint on changed files
        run: |
          changed="${{ needs.changes.outputs.changed_files }}"
          echo "$changed" | tr ' ' '\n' > changed.list
          npx eslint $(cat changed.list)

  typecheck:
    needs: changes
    if: ${{ needs.changes.outputs.projects != '[]' && needs.changes.outputs.projects != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJSON(needs.changes.outputs.projects) }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Run vue-tsc typecheck
        run: pnpm --filter "./${{ matrix.project }}/src" exec vue-tsc --noEmit --skipLibCheck